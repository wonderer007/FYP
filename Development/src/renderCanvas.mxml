<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   width="100%" height="100%" minWidth="2000" minHeight="2000"
			   creationComplete="initApp()"
			   mouseMove ="button1_mouseOverHandler(event)" xmlns:local="*"			   
			   
			   >
	
	<fx:Declarations>


		
		<mx:HTTPService 
			id="farmService" 
			method="GET" 
			url="http://localhost:8080/WebApplication3/farm">
			
		</mx:HTTPService>	
		
		
		<mx:HTTPService 
			id="myHttpService" 
			method="GET" 
			url="http://localhost:8080/WebApplication3/farm">
			
			
		</mx:HTTPService>	

		
		<mx:WipeUp duration="500" id="wipeLeft"/>
		<mx:WipeDown duration="500" id="wipeRight">
			
		</mx:WipeDown>

		
	</fx:Declarations>	
	<fx:Script>
		<![CDATA[
			import components.*;
			
			import flash.utils.flash_proxy;
			
			import mx.controls.Alert;
			import mx.core.UIComponent;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.rpc.events.ResultEvent;
			
			private var startXCor:Number = 0;
			private var startYCor:Number = 0;
			
			private var landSize:Number;
			
			private var playerMovement:RenderingSprites= new RenderingSprites(0,0,921,400);
			private var imagePath:String = "crop1.png";
			
			public var farms:Array = new Array();
			
			
			
			private var landInPossession:Array = new Array();
		
			private var currIndex:Number=0;	
			private var zakatCheck:Number ;
			
			[Bindable]
			public var farmID:String;	
			[Bindable]			
			private var farmState:String;
			[Bindable]
			private var farmCycle:Number;
			[Bindable]
			private var score:int;
			[Bindable]			
			private var message:String;
			[Bindable]
			private var Energy1:Number;
			[Bindable]
			private var Bscore:Number;
			[Bindable]
			private var coins:int;
			[Bindable]
			private var loanTime:Boolean;
			[Bindable]
			private var perviousLoan:Boolean;
			
			[Bindable]
			private var board:String;
			
			
			[Bindable]
			public var BuyWheat:int;
			[Bindable]
			public var SellWheat:int;
			[Bindable]
			public var BuyCorn:int;
			[Bindable]
			public var SellCorn:int;
			
			
			[Bindable]
			public var totalCron:int;
			[Bindable]
			public var totalWheat:int;	
			public var httpService:HTTPService = new HTTPService();
			public var parmList:Object = {};			
			
			public var username:String;
			
			
			private var sound:Sound = new Sound(new URLRequest('assets/sound.mp3'));
			private var soundInterval:int = -1;
			
			public var service:HTTPService;
			
			private var progress:Number;
			private var distance:String;
			private var count:Number;
			private var ind:Number;
			private var isSleep:Boolean = false;
			private var sleepVal:int = 3000;
			private var wakeVal:int = 20;
			private var sleepTime:int = sleepVal;
			private var wakeTime:int = wakeVal;
			private var isMute:Boolean =false;
			private var myChannel:SoundChannel = new SoundChannel();
			private var sleepItter:int = 0;
			private var spriteCounter:int = 0;
			public var  globalCheck:Boolean;
			private var spriteCounter1:int = 7;
			private var sleepWakeCounter:int = 0;
			

			
			public function vagueHandler(obj:String):void{Alert.show(obj);
				if(obj=="transactionIn"){
				}
			}
			
			public function soundHandler():void{
				if(isMute){
					isMute=false;
					soundButton.source="sound.png"
					return;
				}
				isMute = true;
				
				myChannel.stop();
				soundButton.source="soundMute.png";
				soundInterval = -1;
			}
			
			public function goHome(corX:Number, corY:Number):void{
				
				var i:int = 0;
				
				while( i < 10 && playerMovement.getCurrCor().x != corX || playerMovement.getCurrCor().y != corY){
					playerMovement.spriteEventHandler(corX , corY);
					i++;
				}
			}
			
			public function noticeBoard(message:String):void
			{
				this.board = message;
			
			}
			
			public function onTick(event:TimerEvent):void 
			{
				if(!isMute){
					soundInterval++;
				}
				
				if(soundInterval % 33 == 0){
					myChannel = sound.play();
					soundInterval = 0;
				}
				var landDivs: Array = landInPossession[currIndex].getLandDivisions();
				
				var itter:int = 0;
				
				
				if(!isSleep){
					sleepTime--;
				}
				else{
					wakeTime--;
				}
				
				
				if(!isSleep && sleepTime == 0){
					isSleep = true;
					sleepTime = sleepVal;
					sleepWakeCounter++;
					//Alert.show("isSleep");
				}
				
				if(sleepWakeCounter==2 && left1.visible && spriteCounter1 < 0){
					playerMovement.visible = true;
					myViewStack.selectedChild = search;
				}
				
				if(playerSleepTime.visible && !isSleep && spriteCounter1 >= 0){
					board = "Time to wake up";
					
					left1.visible = false;
					left2.visible = false;
					left3.visible = false;
					left4.visible = false;
					left5.visible = false;
					left6.visible = false;
					left7.visible = false;
					left8.visible = false;
					
					if(spriteCounter1 == 0){
						left1.source = "assets/right1.png";
						left1.visible = true;
					}
					else if(spriteCounter1 == 1){
						left2.source = "assets/right0.png";
						left2.visible = true;
						
					}
					else if(spriteCounter1 == 2){
						left3.source = "assets/right2.png";	
						left3.visible = true;
						
					}
					else if(spriteCounter1 == 3){
						left4.source = "assets/right1.png";
						left4.visible = true;
						
					}
					else if(spriteCounter1 == 4){
						left5.source = "assets/right0.png";
						left5.visible = true;
						
					}
					else if(spriteCounter1 == 5){
						left6.source = "assets/right2.png";
						left6.visible = true;
						
					}
					else if(spriteCounter1 == 6){
						left7.source = "assets/right1.png";
						left7.visible = true;
						
					}
					else if(spriteCounter1 == 7){
						left8.source = "assets/right0.png";
						left8.visible = true;
					}
					
					spriteCounter1--;
				}
				
				if(playerSleepTime.visible && isSleep && spriteCounter < 9){
					
					board = "You look Tired, take a nap for a while";
					
					left1.visible = false;
					left2.visible = false;
					left3.visible = false;
					left4.visible = false;
					left5.visible = false;
					left6.visible = false;
					left7.visible = false;
					left8.visible = false;
					
					if(spriteCounter == 0){
						left1.source = "assets/left0.png";
						left1.visible = true;
					}
					else if(spriteCounter == 1){
						left2.source = "assets/left1.png";
						left2.visible = true;
						
					}
					else if(spriteCounter == 2){
						left3.source = "assets/left2.png";	
						left3.visible = true;
						
					}
					else if(spriteCounter == 3){
						left4.source = "assets/left0.png";
						left4.visible = true;
						
					}
					else if(spriteCounter == 4){
						left5.source = "assets/left1.png";
						left5.visible = true;
						
					}
					else if(spriteCounter == 5){
						left6.source = "assets/left2.png";
						left6.visible = true;
						
					}
					else if(spriteCounter == 6){
						left7.source = "assets/left0.png";
						left7.visible = true;
						
					}
					else if(spriteCounter == 7){
						left8.source = "assets/left1.png";
						left8.visible = true;
					}
					spriteCounter++;
				}
				
				if(isSleep && sleepItter == 0){
					//goHome(0, 300);
					myViewStack.selectedChild=playerSleepTime;
					playerMovement.visible = false ;
					sleepItter++;
				}
				
				if(isSleep && wakeTime == 0){
					isSleep = false;
					sleepItter = 0;
					spriteCounter = 0;
					spriteCounter1 = 7;
					wakeTime = wakeVal;
					sleepWakeCounter++;
					//Alert.show("isNotAsleep");
				}
				
				for(; itter < landDivs.length ; ++itter){
					
					if(!landDivs[itter].getStartTimer()){
						
						if(landDivs[itter].getState() == 0){
							if(itter == 0){
								currBgImage1.source = "crop1.png";
							}
							
							else if(itter == 1){
								currBgImage2.source = "crop1.png";
							}
							
							else if(itter == 2){
								currBgImage3.source = "crop1.png";
							}
						}
						
						else if(landDivs[itter].getState() == 1){
							if(itter == 0){
								currBgImage1.source = "crop2.png";
							}
							
							else if(itter == 1){
								currBgImage2.source = "crop2.png";
							}
								
							else if(itter == 2){
								currBgImage3.source = "crop2.png";
							}
						}
						
						else if(landDivs[itter].getState() == 2){
							if(itter == 0){
								currBgImage1.source = "crop3.png";
							}
							
							else if(itter == 1){
								currBgImage2.source = "crop3.png";
							}
								
							else if(itter == 2){
								currBgImage3.source = "crop3.png";
							}
						}
						
						else{
							if(itter == 0){
								currBgImage1.source = "crop4.png";
							}
							
							else if(itter == 1){
								currBgImage2.source = "crop4.png";
							}
								
							else if(itter == 2){
								currBgImage3.source = "crop4.png";
							}
						}
						
					}
				}
				
				// updates the clock display
				message = "counter: ";			
				message = message + count;
				count++;
				
				
				if( this.score > 50)
				{
					this.zakatCheck ++;
				}
					

				if( count % 1000 == 0 )
				{
					


					if( this.zakatCheck >= 8 )
						Alert.show("Should i take zakat....?", "Alert", Alert.OK | Alert.CANCEL, this,alertListener);
					this.zakatCheck = 0;					
					
					var httpService1:HTTPService = new HTTPService();					
					httpService1.url = "http://localhost:8080/WebApplication3/market?action=getRates&item_type=wheat";
					httpService1.addEventListener(ResultEvent.RESULT,setWheatRates);
					httpService1.send(null);
					
					var httpService2:HTTPService = new HTTPService();					
					httpService2.url = "http://localhost:8080/WebApplication3/market?action=getRates&item_type=Corn";
					httpService2.addEventListener(ResultEvent.RESULT,setCornRates);
					httpService2.send(null);

					
					var httpService3:HTTPService = new HTTPService();					
					httpService3.url = "http://localhost:8080/WebApplication3/Score?action=updateScore&ID="+username+"&score="+this.coins+"";
					httpService3.send(null);
					
					var httpService4:HTTPService = new HTTPService();					
					httpService4.url = "http://localhost:8080/WebApplication3/Score?action=updateCoin&ID="+username+"&coin="+score+"";
					httpService4.send(null);


					
					var httpService5:HTTPService = new HTTPService();					
					httpService5.url = "http://localhost:8080/WebApplication3/Score?action=updateEnergy&ID="+username+"&energy="+this.progress;
					httpService5.send(null);
									
					
				
					
				}
				
				if( count % 30 == 0)
					this.loanTime = true;
				
			}
			
			
			private function alertListener(eventObj:CloseEvent):void { 
				if (eventObj.detail==Alert.OK) { 

					this.Bscore = this.Bscore + (( 2.5 * this.score ) / 100 );
					this.score  = this.score - (( 2.5 * this.score ) / 100 );
					
					this.coins = this.coins + 50;
					
					var value:int;
					value = (( 2.5 * this.score ) / 100 );
					var zakat:HTTPService = new HTTPService();
					zakat.url = "http://localhost:8080/WebApplication3/BaitulMall?action=updateZakatCoins&zakat="+ value;
					zakat.send(null);

				} 		
				
			}
			
			
			public function setWheatRates(event:ResultEvent):void
			{
				
				BuyWheat = event.result.result;
				SellWheat = event.result.result
				
			}
			
			
			public function setCornRates(event:ResultEvent):void
			{
				
				BuyCorn = event.result.result;
				SellCorn = event.result.result
			}
			
			
			
			public function initApp():void 
			{
				
				// declate array of 3 farms to store farm informaiton
		
				/*
				left1.visible=false;
				left2.visible=false;
				left3.visible=false;
				left4.visible=false;
				left5.visible=false;
				left6.visible=false;
				left7.visible=false;
				left8.visible=false;
				*/
				
				
				if(username == "")
					return;
				

				Bscore = 1000;
				progress = 0;
				count =0;
				var ticker:Timer = new Timer(1000); 
				ticker.addEventListener(TimerEvent.TIMER, onTick);
				ticker.start();
				
				landSize = 1;
				this.loanTime = true;
				this.perviousLoan = true;
				
				board = "Islamic Economic Simulation";
				
				httpService.url = "http://localhost:8080/WebApplication3/farm";
				
				this.score = 60;
				this.coins = 0;
				this.zakatCheck = 0;
				
				
				var userInfo:HTTPService = new HTTPService();
				userInfo.url = "http://localhost:8080/WebApplication3/user?action=init&username="+username;
				userInfo.addEventListener(ResultEvent.RESULT,setUserInfo);
				userInfo.send(null);

				
				
				var farmInfo:HTTPService = new HTTPService();
				farmInfo.url = "http://localhost:8080/WebApplication3/farm?action=getFarmInfo&username="+username;
				farmInfo.addEventListener(ResultEvent.RESULT,setFarmInfo);
				farmInfo.send(null);
				
				
				
				var httpService1:HTTPService = new HTTPService();
				
				httpService1.url = "http://localhost:8080/WebApplication3/market?action=getRates&item_type=wheat";
				httpService1.addEventListener(ResultEvent.RESULT,setWheatRates);
				httpService1.send(null);
				
				var httpService2:HTTPService = new HTTPService();					
				httpService2.url = "http://localhost:8080/WebApplication3/market?action=getRates&item_type=Corn";
				httpService2.addEventListener(ResultEvent.RESULT,setCornRates);
				httpService2.send(null);				
				
				
				
				
		
				
				landInPossession.push(new Land(1,786,400));
				
				currBgImage1.source = imagePath;
				addElement(playerMovement);
				
				block.visible = false;	
				landInPossession[currIndex].setXBoundarySize(921);
				landInPossession[currIndex].setYBoundarySize(400);
				
				landInPossession.push(new Land(++landSize,665,400));
				

				
				
			}
			
			protected function button1_mouseOverHandler(event:MouseEvent):void
			{	
				
				
				if(globalCheck == true)
				{
					
					if(event.type == MouseEvent.CLICK)
						Alert("ye hoi na bat");
					return;
					
					
				}
				var ith:Number;
				var j:Number;
				var k:Number;
				k=0;
				
				var tmp:int;
				var tmp1:int;
				
				
				if( this.progress == 0)
				{

					for( tmp=0  ;tmp < 100;tmp++)
					{
						for( tmp1=0  ;tmp1 < 100000 ;tmp1++)
						{}						
					}
				}
				else
				{
					for( tmp=0  ;tmp < 100;tmp++)
					{
						for( tmp1=0  ;tmp1 < (100000 / this.progress) ;tmp1++)
						{}						
					}					
				
				}
				
				if(event.stageX > 921 || event.stageY > 400 || isSleep){
					return;
				}
				
				
				playerMovement.spriteEventHandler(event.stageX , event.stageY);
				
				var landDivs: Array = landInPossession[currIndex].getLandDivisions();
				var playerCoor:Point = playerMovement.getCurrCor();
				var i:Number = 0;
				var index:Number = 0;
				var found : Boolean = false;
				
				for( ; i < landDivs.length && !found ; i++){
					var tPt:Point = landDivs[i].getOrigin();
					
					if((playerCoor.x < tPt.x + 400) && (playerCoor.x > tPt.x) && (playerCoor.y < tPt.y + 100) && (playerCoor.y > tPt.y - 100)){
						found = true;
						index = i;
					}
				}	
																	/*code added*/
				
				if(playerMovement.getBoundaryChanged()){
					Alert.show("boundary");
					var boundaryState:Number = playerMovement.getBoundaryState();
					playerMovement.setBoundaryChanged();
					
					if(boundaryState == 0 && currIndex > 0){
						currIndex--;
						block.visible=false;
					}
					else if(currIndex < landSize){
						currIndex++;
						if(currIndex == landSize - 1){
							block.visible = true;
						}
					}	
					var numDivs:Number = landInPossession[currIndex].getNumLandDivision();
					var tempLandDivs:Array = landInPossession[currIndex].getLandDivisions();
					
					if(tempLandDivs.length > 0){
						var c1:Point=new Point(tempLandDivs[0].getOrigin().x,tempLandDivs[0].getOrigin().y);
						currBgImage1.x = c1.x+14;
						currBgImage1.y = c1.y-115;
						
						var st:Number = tempLandDivs[0].getState();
						if(st==0){
							currBgImage1.source="crop1.png";
						}
						else if(st==1){
							currBgImage1.source="crop2.png";
						}
						else if(st==2){
							currBgImage1.source="crop3.png";
						}
						else if(st==3){
							currBgImage1.source="crop4.png";
						}
						currBgImage1.visible = false;
					}
					
					if(tempLandDivs.length > 1){
						var c2:Point=new Point(tempLandDivs[0].getOrigin().x,tempLandDivs[0].getOrigin().y);
						currBgImage2.x = c2.x+14;
						currBgImage2.y = c2.y-115;
						
						var st1:Number = tempLandDivs[1].getState();
						if(st1==0){
							currBgImage2.source="crop1.png";
						}
						else if(st1==1){
							currBgImage2.source="crop2.png";
						}
						else if(st1==2){
							currBgImage2.source="crop3.png";
						}
						else if(st1==3){
							currBgImage2.source="crop4.png";
						}
						currBgImage2.visible = false;
					}
					
					if(tempLandDivs.length > 2){
						var c3:Point=new Point(tempLandDivs[0].getOrigin().x,tempLandDivs[0].getOrigin().y);
						currBgImage3.x = c3.x+14;
						currBgImage3.y = c3.y-115;
						
						var st2:Number = tempLandDivs[2].getState();
						if(st2==0){
							currBgImage3.source="crop1.png";
						}
						else if(st2==1){
							currBgImage3.source="crop2.png";
						}
						else if(st2==2){
							currBgImage3.source="crop3.png";
						}
						else if(st2==3){
							currBgImage3.source="crop4.png";
						}
						currBgImage3.visible = false;
					}
					
					star0.visible=false;
					star1.visible=false;
					star2.visible=false;
					star3.visible=false;
					star4.visible=false;
					star5.visible=false;
					star6.visible=false;
					star7.visible=false;
					star8.visible=false;
					
					star9.visible=false;
					star10.visible=false;
					star11.visible=false;
					star12.visible=false;
					star13.visible=false;
					star14.visible=false;
					star15.visible=false;
					star16.visible=false;
					star17.visible=false;
					
					star18.visible=false;
					star19.visible=false;
					star20.visible=false;
					star21.visible=false;
					star22.visible=false;
					star23.visible=false;
					star24.visible=false;
					star25.visible=false;
					star26.visible=false;
					
					if(numDivs == 0){
						currBgImage1.visible = false;
						currBgImage2.visible = false;
						currBgImage3.visible = false;	
					}
						
						
					else if(numDivs == 1){
						currBgImage1.visible = true;
						currBgImage2.visible = false;
						currBgImage3.visible = false;
						
						var t:Array = tempLandDivs[0].getIndeces();
						var ind:Number = tempLandDivs[0].getIndexNumber();
						var tCoor:Array = tempLandDivs[0].getCoordinates();
						
						for(var a:Number=0; a <= ind; a++){
							if(t[a]==0){
								star0.visible=true;
								star0.x = tCoor[0].x;
								star0.y = tCoor[0].y;
							}
							else if(t[a]==1){
								star1.visible=true;
								star1.x = tCoor[1].x;
								star1.y = tCoor[1].y;
							}
							else if(t[a]==2){
								star2.visible=true;
								star2.x = tCoor[2].x;
								star2.y = tCoor[2].y;
							}
							else if(t[a]==3){
								star3.visible=true;
								star3.x = tCoor[3].x;
								star3.y = tCoor[3].y;
							}
							else if(t[a]==4){
								star4.visible=true;
								star4.x = tCoor[4].x;
								star4.y = tCoor[4].y;
							}
							else if(t[a]==5){
								star5.visible=true;
								star5.x = tCoor[5].x;
								star5.y = tCoor[5].y;
							}
							else if(t[a]==6){
								star6.visible=true;
								star6.x = tCoor[6].x;
								star6.y = tCoor[6].y;
							}
							else if(t[a]==7){
								star7.visible=true;
								star7.x = tCoor[7].x;
								star7.y = tCoor[7].y;
							}
							else if(t[a]==8){
								star8.visible=true;
								star8.x = tCoor[8].x;
								star8.y = tCoor[8].y;
							}
						}
						
					}
					else if(numDivs == 2){
						currBgImage1.visible = true;
						currBgImage2.visible = true;
						currBgImage3.visible = false;
						
						var t1:Array = tempLandDivs[0].getIndeces();
						var ind1:Number = tempLandDivs[0].getIndexNumber();
						var t1Coor:Array = tempLandDivs[0].getCoordinates();
						
						
						for(var k1:Number=0; k1 <= ind1; k1++){
							if(t1[k1]==0){
								star0.visible=true;
								star0.x = t1Coor[0].x;
								star0.y = t1Coor[0].y;
							}
							else if(t1[k1]==1){
								star1.visible=true;
								star1.x = t1Coor[1].x;
								star1.y = t1Coor[1].y;
							}
							else if(t1[k1]==2){
								star2.visible=true;
								star2.x = t1Coor[2].x;
								star2.y = t1Coor[2].y;
							}
							else if(t1[k1]==3){
								star3.visible=true;
								star3.x = t1Coor[3].x;
								star3.y = t1Coor[3].y;
							}
							else if(t1[k1]==4){
								star4.visible=true;
								star4.x = t1Coor[4].x;
								star4.y = t1Coor[4].y;
							}
							else if(t1[k1]==5){
								star5.visible=true;
								star5.x = t1Coor[5].x;
								star5.y = t1Coor[5].y;
							}
							else if(t1[k1]==6){
								star6.visible=true;
								star6.x = t1Coor[6].x;
								star6.y = t1Coor[6].y;
							}
							else if(t1[k1]==7){
								star7.visible=true;
								star7.x = t1Coor[7].x;
								star7.y = t1Coor[7].y;
							}
							else if(t1[k1]==8){
								star8.visible=true;
								star8.x = t1Coor[8].x;
								star8.y = t1Coor[8].y;
							}
						}
						
						
						var t2:Array = tempLandDivs[1].getIndeces();
						var ind2:Number = tempLandDivs[1].getIndexNumber();
						var t2Coor:Array = tempLandDivs[0].getCoordinates();
						
						for(var k2:Number=0; k2 <= ind; k2++){
							if(t2[k2]==0){
								star9.visible=true;
								star9.x = t2Coor[0].x;
								star9.y = t2Coor[0].y;
							}
							else if(t2[k2]==1){
								star10.visible=true;
								star10.x = t2Coor[1].x;
								star10.y = t2Coor[1].y;
							}
							else if(t2[k2]==2){
								star11.visible=true;
								star11.x = t2Coor[2].x;
								star11.y = t2Coor[2].y;
							}
							else if(t2[k2]==3){
								star12.visible=true;
								star12.x = t2Coor[3].x;
								star12.y = t2Coor[3].y;
							}
							else if(t2[k2]==4){
								star13.visible=true;
								star13.x = t2Coor[4].x;
								star13.y = t2Coor[4].y;
							}
							else if(t2[k2]==5){
								star14.visible=true;
								star14.x = t2Coor[5].x;
								star14.y = t2Coor[5].y;
							}
							else if(t2[k2]==6){
								star15.visible=true;
								star15.x = t2Coor[6].x;
								star15.y = t2Coor[6].y;
							}
							else if(t2[k2]==7){
								star16.visible=true;
								star16.x = t2Coor[7].x;
								star16.y = t2Coor[7].y;
							}
							else if(t2[k2]==8){
								star17.visible=true;
								star17.x = t2Coor[8].x;
								star17.y = t2Coor[8].y;
							}
						}
					}
					else{
						currBgImage1.visible = true;
						currBgImage2.visible = true;
						currBgImage3.visible = true;
					}
				}
				
				if(landDivs[index].getTimeDelay()!=0){
					landDivs[index].setTimerState(true);
					return;
				}
				
				ind = index ;
					
				if(found){
					
					i = index;
					
					var coordinates:Array = landDivs[i].getCoordinates();
					
					var state:Number = landDivs[i].getState();
					
					var key:Boolean = landDivs[i].caterChanges(playerCoor);
					
					if(key){ 
						
						var pt:Point = landDivs[i].getPoint();						
						
						if(i == 0){
							if(pt.x == coordinates[0].x && pt.y == coordinates[0].y){
								star0.visible=false;
							}
							else if(pt.x == coordinates[1].x && pt.y == coordinates[1].y){
								star1.visible=false;
							}
							else if(pt.x == coordinates[2].x && pt.y == coordinates[2].y){
								star2.visible=false;
							}
							else if(pt.x == coordinates[3].x && pt.y == coordinates[3].y){
								star3.visible=false;
							}
							else if(pt.x == coordinates[4].x && pt.y == coordinates[4].y){
								star4.visible=false;
							}
							else if(pt.x == coordinates[5].x && pt.y == coordinates[5].y){
								star5.visible=false;
							}
							else if(pt.x == coordinates[6].x && pt.y == coordinates[6].y){
								star6.visible=false;
							}
							else if(pt.x == coordinates[7].x && pt.y == coordinates[7].y){
								star7.visible=false;
							}
							else if(pt.x == coordinates[8].x && pt.y == coordinates[8].y){
								star8.visible=false;
							}
						}
						else if(i == 1){
							if(pt.x == coordinates[0].x && pt.y == coordinates[0].y){
								star9.visible=false;
							}
							else if(pt.x == coordinates[1].x && pt.y == coordinates[1].y){
								star10.visible=false;
							}
							else if(pt.x == coordinates[2].x && pt.y == coordinates[2].y){
								star11.visible=false;
							}
							else if(pt.x == coordinates[3].x && pt.y == coordinates[3].y){
								star12.visible=false;
							}
							else if(pt.x == coordinates[4].x && pt.y == coordinates[4].y){
								star13.visible=false;
							}
							else if(pt.x == coordinates[5].x && pt.y == coordinates[5].y){
								star14.visible=false;
							}
							else if(pt.x == coordinates[6].x && pt.y == coordinates[6].y){
								star15.visible=false;
							}
							else if(pt.x == coordinates[7].x && pt.y == coordinates[7].y){
								star16.visible=false;
							}
							else if(pt.x == coordinates[8].x && pt.y == coordinates[8].y){
								star17.visible=false;
							}
						}
						else if(i == 2){
							if(pt.x == coordinates[0].x && pt.y == coordinates[0].y){
								star18.visible=false;
							}
							else if(pt.x == coordinates[1].x && pt.y == coordinates[1].y){
								star19.visible=false;
							}
							else if(pt.x == coordinates[2].x && pt.y == coordinates[2].y){
								star20.visible=false;
							}
							else if(pt.x == coordinates[3].x && pt.y == coordinates[3].y){
								star21.visible=false;
							}
							else if(pt.x == coordinates[4].x && pt.y == coordinates[4].y){
								star22.visible=false;
							}
							else if(pt.x == coordinates[5].x && pt.y == coordinates[5].y){
								star23.visible=false;
							}
							else if(pt.x == coordinates[6].x && pt.y == coordinates[6].y){
								star24.visible=false;
							}
							else if(pt.x == coordinates[7].x && pt.y == coordinates[7].y){
								star25.visible=false;
							}
							else if(pt.x == coordinates[8].x && pt.y == coordinates[8].y){
								star26.visible=false;
							}
						}

					}
					
					
					if(state != landDivs[i].getState()){
						state = landDivs[i].getState();
						
						landDivs[index].setStartTimer();				/*code added*/
						
						var sCoor:Array = landDivs[i].getCoordinates();
						
						if(state==0){
							if(i == 0){
								
								
								/*
								parmList["action"] = "alterFarmState";
								parmList["ID"] = farms[i].ID;
								parmList["state"] = state;
								myHttpService.send(parmList);
								*/
								
								if((this.score - 5) <=0)
								{
									Alert.show("you need 5 coins to seed farm");									
									return ;							
								}
								
								currBgImage1.source="blurCrop1.png";								
								score += 50;
								
								this.progress -= 5;
								
								if( this.progress <=0)
									this.progress += 5; 
								
								progressBar.setProgress(progress, progressBar.maximum);									
								
								star0.visible=true;
								star0.x=sCoor[0].x;
								star0.y=sCoor[0].y;
								
								star1.visible=true;
								star1.x=sCoor[1].x;
								star1.y=sCoor[1].y;
								
								star2.visible=true;
								star2.x=sCoor[2].x;
								star2.y=sCoor[2].y;
								
								star3.visible=true;
								star3.x=sCoor[3].x;
								star3.y=sCoor[3].y;
								
								star4.visible=true;
								star4.x=sCoor[4].x;
								star4.y=sCoor[4].y;
								
								star5.visible=true;
								star5.x=sCoor[5].x;
								star5.y=sCoor[5].y;
								
								star6.visible=true;
								star6.x=sCoor[6].x;
								star6.y=sCoor[6].y;
								
								star7.visible=true;
								star7.x=sCoor[7].x;
								star7.y=sCoor[7].y;
								
								star8.visible=true;
								star8.x=sCoor[8].x;
								star8.y=sCoor[8].y;
							}
							else if(i==1){
								
								currBgImage2.source="blurCrop1.png";

							  /*
								parmList["action"] = "alterFarmState";
								parmList["ID"] = farms[i].ID;
								parmList["state"] = state;
								httpService.send(parmList);								
								*/
								score += 50;
								
								
								star9.visible=true;
								star9.x=sCoor[0].x;
								star9.y=sCoor[0].y;
								
								star10.visible=true;
								star10.x=sCoor[1].x;
								star10.y=sCoor[1].y;
								
								star11.visible=true;
								star11.x=sCoor[2].x;
								star11.y=sCoor[2].y;
								
								star12.visible=true;
								star12.x=sCoor[3].x;
								star12.y=sCoor[3].y;
								
								star13.visible=true;
								star13.x=sCoor[4].x;
								star13.y=sCoor[4].y;
								
								star14.visible=true;
								star14.x=sCoor[5].x;
								star14.y=sCoor[5].y;
								
								star15.visible=true;
								star15.x=sCoor[6].x;
								star15.y=sCoor[6].y;
								
								star16.visible=true;
								star16.x=sCoor[7].x;
								star16.y=sCoor[7].y;
								
								star17.visible=true;
								star17.x=sCoor[8].x;
								star17.y=sCoor[8].y;
							}
							else{
								
								currBgImage3.source="blurCrop1.png";
								
								
								score += 50;
								/*
								parmList["action"] = "alterFarmState";
								parmList["ID"] = farms[i].ID;
								parmList["state"] = state;
								httpService.send(parmList);						
								*/
								
								
								star18.visible=true;
								star18.x=sCoor[0].x;
								star18.y=sCoor[0].y;
								
								star19.visible=true;
								star19.x=sCoor[1].x;
								star19.y=sCoor[1].y;
								
								star20.visible=true;
								star20.x=sCoor[2].x;
								star20.y=sCoor[2].y;
								
								star21.visible=true;
								star21.x=sCoor[3].x;
								star21.y=sCoor[3].y;
								
								star22.visible=true;
								star22.x=sCoor[4].x;
								star22.y=sCoor[4].y;
								
								star23.visible=true;
								star23.x=sCoor[5].x;
								star23.y=sCoor[5].y;
								
								star24.visible=true;
								star24.x=sCoor[6].x;
								star24.y=sCoor[6].y;
								
								star25.visible=true;
								star25.x=sCoor[7].x;
								star25.y=sCoor[7].y;
								
								star26.visible=true;
								star26.x=sCoor[8].x;
								star26.y=sCoor[8].y;
							}
						}
						else if(state==1){
							if(i == 0){
							
								currBgImage1.source="blurCrop2.png";
								
								/*
								parmList["action"] = "alterFarmState";
								parmList["ID"] = farms[i].ID;
								parmList["state"] = state;
								httpService.send(parmList);
								*/
									

									
								this.progress -= 5; 
								
								if( this.progress <=0)
									this.progress += 5; 
									
								progressBar.setProgress(progress, progressBar.maximum);	
								
	

								
								star0.visible=true;
								star0.x=sCoor[0].x;
								star0.y=sCoor[0].y;
								
								star1.visible=true;
								star1.x=sCoor[1].x;
								star1.y=sCoor[1].y;
								
								star2.visible=true;
								star2.x=sCoor[2].x;
								star2.y=sCoor[2].y;
								
								star3.visible=true;
								star3.x=sCoor[3].x;
								star3.y=sCoor[3].y;
								
								star4.visible=true;
								star4.x=sCoor[4].x;
								star4.y=sCoor[4].y;
								
								star5.visible=true;
								star5.x=sCoor[5].x;
								star5.y=sCoor[5].y;
								
								star6.visible=true;
								star6.x=sCoor[6].x;
								star6.y=sCoor[6].y;
								
								star7.visible=true;
								star7.x=sCoor[7].x;
								star7.y=sCoor[7].y;
								
								star8.visible=true;
								star8.x=sCoor[8].x;
								star8.y=sCoor[8].y;
							}
							else if(i==1){
								
								currBgImage2.source="blurCrop2.png";
								
								
								/*
								parmList["action"] = "alterFarmState";
								parmList["ID"] = farms[i].ID;
								parmList["state"] = state;
								httpService.send(parmList);								
								*/
								star9.visible=true;
								star9.x=sCoor[0].x;
								star9.y=sCoor[0].y;
								
								star10.visible=true;
								star10.x=sCoor[1].x;
								star10.y=sCoor[1].y;
								
								star11.visible=true;
								star11.x=sCoor[2].x;
								star11.y=sCoor[2].y;
								
								star12.visible=true;
								star12.x=sCoor[3].x;
								star12.y=sCoor[3].y;
								
								star13.visible=true;
								star13.x=sCoor[4].x;
								star13.y=sCoor[4].y;
								
								star14.visible=true;
								star14.x=sCoor[5].x;
								star14.y=sCoor[5].y;
								
								star15.visible=true;
								star15.x=sCoor[6].x;
								star15.y=sCoor[6].y;
								
								star16.visible=true;
								star16.x=sCoor[7].x;
								star16.y=sCoor[7].y;
								
								star17.visible=true;
								star17.x=sCoor[8].x;
								star17.y=sCoor[8].y;
							}
							else{
								
								currBgImage3.source="blurCrop2.png";
								
								
							   /*
								parmList["action"] = "alterFarmState";
								parmList["ID"] = farms[i].ID;
								parmList["state"] = state;
								httpService.send(parmList);
								*/
								
								star18.visible=true;
								star18.x=sCoor[0].x;
								star18.y=sCoor[0].y;
								
								star19.visible=true;
								star19.x=sCoor[1].x;
								star19.y=sCoor[1].y;
								
								star20.visible=true;
								star20.x=sCoor[2].x;
								star20.y=sCoor[2].y;
								
								star21.visible=true;
								star21.x=sCoor[3].x;
								star21.y=sCoor[3].y;
								
								star22.visible=true;
								star22.x=sCoor[4].x;
								star22.y=sCoor[4].y;
								
								star23.visible=true;
								star23.x=sCoor[5].x;
								star23.y=sCoor[5].y;
								
								star24.visible=true;
								star24.x=sCoor[6].x;
								star24.y=sCoor[6].y;
								
								star25.visible=true;
								star25.x=sCoor[7].x;
								star25.y=sCoor[7].y;
								
								star26.visible=true;
								star26.x=sCoor[8].x;
								star26.y=sCoor[8].y;
							}
						}
						else if(state==2){
							if(i == 0){
								
								currBgImage1.source="blurCrop3.png";
								/*
								parmList["action"] = "alterFarmState";
								parmList["ID"] = farms[i].ID;
								parmList["state"] = state;
								httpService.send(parmList);
								*/
								
								
								farmID = "1";
								farmState = "3";
								this.progress -= 5;		
								if( this.progress <=0)
									this.progress += 5; 
								
								progressBar.setProgress(progress, progressBar.maximum);	
								

								
								star0.visible=true;
								star0.x=sCoor[0].x;
								star0.y=sCoor[0].y;
								
								star1.visible=true;
								star1.x=sCoor[1].x;
								star1.y=sCoor[1].y;
								
								star2.visible=true;
								star2.x=sCoor[2].x;
								star2.y=sCoor[2].y;
								
								star3.visible=true;
								star3.x=sCoor[3].x;
								star3.y=sCoor[3].y;
								
								star4.visible=true;
								star4.x=sCoor[4].x;
								star4.y=sCoor[4].y;
								
								star5.visible=true;
								star5.x=sCoor[5].x;
								star5.y=sCoor[5].y;
								
								star6.visible=true;
								star6.x=sCoor[6].x;
								star6.y=sCoor[6].y;
								
								star7.visible=true;
								star7.x=sCoor[7].x;
								star7.y=sCoor[7].y;
								
								star8.visible=true;
								star8.x=sCoor[8].x;
								star8.y=sCoor[8].y;
							}
							else if(i==1){
								
								currBgImage2.source="blurCrop3.png";
								
								/*
								parmList["action"] = "alterFarmState";
								parmList["ID"] = farms[i].ID;
								parmList["state"] = state;
								httpService.send(parmList);								
								*/
								
								star9.visible=true;
								star9.x=sCoor[0].x;
								star9.y=sCoor[0].y;
								
								star10.visible=true;
								star10.x=sCoor[1].x;
								star10.y=sCoor[1].y;
								
								star11.visible=true;
								star11.x=sCoor[2].x;
								star11.y=sCoor[2].y;
								
								star12.visible=true;
								star12.x=sCoor[3].x;
								star12.y=sCoor[3].y;
								
								star13.visible=true;
								star13.x=sCoor[4].x;
								star13.y=sCoor[4].y;
								
								star14.visible=true;
								star14.x=sCoor[5].x;
								star14.y=sCoor[5].y;
								
								star15.visible=true;
								star15.x=sCoor[6].x;
								star15.y=sCoor[6].y;
								
								star16.visible=true;
								star16.x=sCoor[7].x;
								star16.y=sCoor[7].y;
								
								star17.visible=true;
								star17.x=sCoor[8].x;
								star17.y=sCoor[8].y;
							}
							else{
								
								currBgImage3.source="blurCrop3.png";
								
								/*
								parmList["action"] = "alterFarmState";
								parmList["ID"] = farms[i].ID;
								parmList["state"] = state;
								httpService.send(parmList);	
								*/
								
								star18.visible=true;
								star18.x=sCoor[0].x;
								star18.y=sCoor[0].y;
								
								star19.visible=true;
								star19.x=sCoor[1].x;
								star19.y=sCoor[1].y;
								
								star20.visible=true;
								star20.x=sCoor[2].x;
								star20.y=sCoor[2].y;
								
								star21.visible=true;
								star21.x=sCoor[3].x;
								star21.y=sCoor[3].y;
								
								star22.visible=true;
								star22.x=sCoor[4].x;
								star22.y=sCoor[4].y;
								
								star23.visible=true;
								star23.x=sCoor[5].x;
								star23.y=sCoor[5].y;
								
								star24.visible=true;
								star24.x=sCoor[6].x;
								star24.y=sCoor[6].y;
								
								star25.visible=true;
								star25.x=sCoor[7].x;
								star25.y=sCoor[7].y;
								
								star26.visible=true;
								star26.x=sCoor[8].x;
								star26.y=sCoor[8].y;
							}
						}
						else if(state==3){
							if(i == 0){
								
								currBgImage1.source="blurCrop4.png";
								/*
								parmList["action"] = "alterFarmState";
								parmList["ID"] = farms[i].ID;
								parmList["state"] = state;
								httpService.send(parmList);								
								*/

								this.progress -= 5;		
								
								if( this.progress <=0)
									this.progress += 5; 
								
								progressBar.setProgress(progress, progressBar.maximum);	
								
								
								
								
								star0.visible=true;
								star0.x=sCoor[0].x;
								star0.y=sCoor[0].y;
								
								star1.visible=true;
								star1.x=sCoor[1].x;
								star1.y=sCoor[1].y;
								
								star2.visible=true;
								star2.x=sCoor[2].x;
								star2.y=sCoor[2].y;
								
								star3.visible=true;
								star3.x=sCoor[3].x;
								star3.y=sCoor[3].y;
								
								star4.visible=true;
								star4.x=sCoor[4].x;
								star4.y=sCoor[4].y;
								
								star5.visible=true;
								star5.x=sCoor[5].x;
								star5.y=sCoor[5].y;
								
								star6.visible=true;
								star6.x=sCoor[6].x;
								star6.y=sCoor[6].y;
								
								star7.visible=true;
								star7.x=sCoor[7].x;
								star7.y=sCoor[7].y;
								
								star8.visible=true;
								star8.x=sCoor[8].x;
								star8.y=sCoor[8].y;
							}
							else if(i==1){
								
								currBgImage2.source="blurCrop4.png";
								
								/*
								parmList["action"] = "alterFarmState";
								parmList["ID"] = farms[i].ID;
								parmList["state"] = state;
								httpService.send(parmList);								
								*/
								star9.visible=true;
								star9.x=sCoor[0].x;
								star9.y=sCoor[0].y;
								
								star10.visible=true;
								star10.x=sCoor[1].x;
								star10.y=sCoor[1].y;
								
								star11.visible=true;
								star11.x=sCoor[2].x;
								star11.y=sCoor[2].y;
								
								star12.visible=true;
								star12.x=sCoor[3].x;
								star12.y=sCoor[3].y;
								
								star13.visible=true;
								star13.x=sCoor[4].x;
								star13.y=sCoor[4].y;
								
								star14.visible=true;
								star14.x=sCoor[5].x;
								star14.y=sCoor[5].y;
								
								star15.visible=true;
								star15.x=sCoor[6].x;
								star15.y=sCoor[6].y;
								
								star16.visible=true;
								star16.x=sCoor[7].x;
								star16.y=sCoor[7].y;
								
								star17.visible=true;
								star17.x=sCoor[8].x;
								star17.y=sCoor[8].y;
							}
							else{
								
								currBgImage3.source="blurCrop4.png";
								
							    /*
								parmList["action"] = "alterFarmState";
								parmList["ID"] = farms[i].ID;
								parmList["state"] = state;
								httpService.send(parmList);								
								*/
								
								star18.visible=true;
								star18.x=sCoor[0].x;
								star18.y=sCoor[0].y;
								
								star19.visible=true;
								star19.x=sCoor[1].x;
								star19.y=sCoor[1].y;
								
								star20.visible=true;
								star20.x=sCoor[2].x;
								star20.y=sCoor[2].y;
								
								star21.visible=true;
								star21.x=sCoor[3].x;
								star21.y=sCoor[3].y;
								
								star22.visible=true;
								star22.x=sCoor[4].x;
								star22.y=sCoor[4].y;
								
								star23.visible=true;
								star23.x=sCoor[5].x;
								star23.y=sCoor[5].y;
								
								star24.visible=true;
								star24.x=sCoor[6].x;
								star24.y=sCoor[6].y;
								
								star25.visible=true;
								star25.x=sCoor[7].x;
								star25.y=sCoor[7].y;
								
								star26.visible=true;
								star26.x=sCoor[8].x;
								star26.y=sCoor[8].y;
							}
						}
					}
				}
						
			}
			
			protected function button2_clickHandler(event:MouseEvent,seed:String):void
			{
				if(landInPossession[currIndex].addFarmDivision(playerMovement.getCurrCor())){
					var land:Land = landInPossession[currIndex];				
					var farmDiv:Array = landInPossession[currIndex].getLandDivisions();	
					var tPt:Point = playerMovement.getCurrCor();
					


					
					
					var postdata:Object = {};
					
					postdata["action"] = "addFarm";
					postdata["owner"] = username;					
					postdata["x"] = tPt.x;
					postdata["y"] = tPt.y;					
					postdata["crop"] = seed;	
					
					farmService.addEventListener(ResultEvent.RESULT,updateFarm);
					farmService.send(postdata);	
					
					
					farmDiv.push(new LandDivision(tPt, 0, "Wheat", "Ordinary"));
					
					landInPossession[currIndex].setLandDivisions(farmDiv);
					
					var div:Number = landInPossession[currIndex].getNumLandDivision();
					
					var coor:Array = farmDiv[farmDiv.length-1].getCoordinates(); 
					
					if(div == 1){
						currBgImage1.visible = true;
						currBgImage1.x = tPt.x + 14;
						currBgImage1.y = tPt.y - 115;
						currBgImage1.source="blurCrop1.png";
						
						star0.x = coor [0].x;
						star0.y = coor [0].y;
						star0.visible=true;
						
						star1.x = coor [1].x;
						star1.y = coor [1].y;
						star1.visible=true;
						
						star2.x = coor [2].x;
						star2.y = coor [2].y;
						star2.visible=true;
						
						star3.x = coor [3].x;
						star3.y = coor [3].y;
						star3.visible=true;
						
						star4.x = coor [4].x;
						star4.y = coor [4].y;
						star4.visible=true;
						
						star5.x = coor [5].x;
						star5.y = coor [5].y;
						star5.visible=true;
						
						star6.x = coor [6].x;
						star6.y = coor [6].y;
						star6.visible=true;
						
						star7.x = coor [7].x;
						star7.y = coor [7].y;
						star7.visible=true;
						
						star8.x = coor [8].x;
						star8.y = coor [8].y;
						star8.visible=true;
					}
					else if(div == 2){
						currBgImage2.visible = true;
						currBgImage2.x = tPt.x + 14;
						currBgImage2.y = tPt.y - 115;
						currBgImage2.source="blurCrop1.png";
						
						star9.x = coor [0].x;
						star9.y = coor [0].y;
						star9.visible=true;
						
						star10.x = coor [1].x;
						star10.y = coor [1].y;
						star10.visible=true;
						
						star11.x = coor [2].x;
						star11.y = coor [2].y;
						star11.visible=true;
						
						star12.x = coor [3].x;
						star12.y = coor [3].y;
						star12.visible=true;
						
						star13.x = coor [4].x;
						star13.y = coor [4].y;
						star13.visible=true;
						
						star14.x = coor [5].x;
						star14.y = coor [5].y;
						star14.visible=true;
						
						star15.x = coor [6].x;
						star15.y = coor [6].y;
						star15.visible=true;
						
						star16.x = coor [7].x;
						star16.y = coor [7].y;
						star16.visible=true;
						
						star17.x = coor [8].x;
						star17.y = coor [8].y;
						star17.visible=true;
					}
					else{
						currBgImage3.visible = true;
						currBgImage3.x = tPt.x + 14;
						currBgImage3.y = tPt.y - 115;
						currBgImage3.source="blurCrop1.png";
						
						star18.x = coor [0].x;
						star18.y = coor [0].y;
						star18.visible=true;
						
						star19.x = coor [1].x;
						star19.y = coor [1].y;
						star19.visible=true;
						
						star20.x = coor [2].x;
						star20.y = coor [2].y;
						star20.visible=true;
						
						star21.x = coor [3].x;
						star21.y = coor [3].y;
						star21.visible=true;
						
						star22.x = coor [4].x;
						star22.y = coor [4].y;
						star22.visible=true;
						
						star23.x = coor [5].x;
						star23.y = coor [5].y;
						star23.visible=true;
						
						star24.x = coor [6].x;
						star24.y = coor [6].y;
						star24.visible=true;
						
						star25.x = coor [7].x;
						star25.y = coor [7].y;
						star25.visible=true;
						
						star26.x = coor [8].x;
						star26.y = coor [8].y;
						star26.visible=true;
					}
				}
				else{
					Alert.show("Can't cultivate here");
				}
				
			}
			protected function button3_clickHandler(event:MouseEvent):void
			{
				block.visible = false;	
				landInPossession[currIndex].setXBoundarySize(921);
				landInPossession[currIndex].setYBoundarySize(400);
				
				landInPossession.push(new Land(++landSize,665,400));
			}
			
			protected function button4_clickHandler(event:MouseEvent):void
			{
				Alert.show("You have clicked on the transaction Option");	
			}
			
			protected function button5_clickHandler(event:MouseEvent):void
			{
				Alert.show("You have clicked on the Bus Ride Option");
			}
			
			protected function button6_clickHandler(event:MouseEvent):void
			{
				Alert.show("You have clicked on the Food Option");	
			}
			
			protected function loginService_resultHandler(event:ResultEvent):void
			{
				// TODO Auto-generated method stub
//				Alert.show("Call lag gai");
				
			}
			
			protected function giveChairty_mouseOverHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				

				notification.text ="submit your chairity to Bait ul Mall";
			}
			
			protected function giveChairty_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if(this.score-5 >5)
				{
					this.score = this.score - 5;
					this.Bscore = this.Bscore +5;					
					this.coins = this.coins + 10;
					
					var charity:HTTPService = new HTTPService();
					charity.url = "http://localhost:8080/WebApplication3/BaitulMall?action=addCharity&charity=5";
					charity.send(null);
					
					
				
				}
				else
					Alert.show("not enough coins");
				
			}
			
			protected function takeLoan_mouseOverHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				notification.text ="take loan from Bait ul Mall";				
			}
			
			protected function takeLoan_clickHandler(event:MouseEvent):void
			{


				var loan:HTTPService = new HTTPService();
				loan.url = "http://localhost:8080/WebApplication3/BaitulMall?action=askLoan";
				
				if( this.loanTime == true  && this.perviousLoan == true)
				{
					this.loanTime = false;
					this.perviousLoan = false;
					this.score = this.score + 50;
					
					
					var httpService5:HTTPService = new HTTPService();					
					httpService5.url = "http://localhost:8080/WebApplication3/Score?action=updateLoanInfo&ID="+username+"&isDebtor=yes";
					httpService5.send(null);
					
					
				}
				else
				{
					if( this.loanTime == false)
						Alert.show("loan period is not yet over");
					else
						Alert.show("please return previous loan");
				}
				
				
			}
			
	
			public function setUserInfo(event:ResultEvent):void
			{
				
				this.score = event.result.user.coin;
				this.coins = event.result.user.score;
				this.progress = event.result.user.energy;
				this.totalWheat = event.result.user.wheat;
				this.totalCron = event.result.user.corn;	
				progressBar.setProgress(progress, progressBar.maximum);	
				

				if(event.result.user.isDebtor == "yes")
					this.perviousLoan = false;
				else
					this.perviousLoan = true;
			}			
			
			
			
			public function updateFarm(event:ResultEvent):void
			{
				
				
				var myFarm:Farm = new Farm();
				
				myFarm.ID = event.result.farm.ID;	
				
				farms.push(myFarm);
				
				
				
			}			
			
			public function loginAction(event:ResultEvent):void
			{
				
				if( event.result.status == true)
				{
					this.username = Username.text;
					
					
					initApp();
					
					globalCheck = false;
					viewstack1.selectedChild = game;
					
					Username.text= "";
					Password.text = "";
					
					
					
					
					
					
				}
				else
					Alert.show("Invalid Login Try Again !");
			}
			
			
			public function signUpResult(event:ResultEvent):void
			{

					
					if( event.result.status  == true)
					{
						Alert.show("Login Successfull");
						viewstack1.selectedChild = login;
						
						SUsername.text = "";
						SPassword.text = "";
						SEmail.text = "";
						
					}
					else if( event.result.status  == false )
					{
						Alert.show("User Already present try again");							
					}
					else if( event.result.status  == "resource" )
					{
						Alert.show("Bait ul Mall didn't have enough resource Tray after some time");							
					}					
					else
						Alert.show("HTTP Request failure");
					
					
					
			}
			public function setFarmInfo(event:ResultEvent):void
			{
				

				
				var x:int;
				var y:int;
				var crop:String;
				
				
				if(event.result.farms.size == 1)
				{
					
					var myFarm:Farm = new Farm();
					
					myFarm.ID = event.result.farms.farm.ID;
					myFarm.crop = event.result.farms.farm.crop;
					myFarm.cycle = event.result.farms.farm.cycle;					
					myFarm.state = event.result.farms.farm.state;
					myFarm.x = event.result.farms.farm.x;
					myFarm.y = event.result.farms.farm.y;										
					farms.push(myFarm);
					
					
				}
				else if (event.result.farms.size > 1)
				{
				
					var i:int;
					i=0;
					for(i=0;i< event.result.farms.size;i++)
					{
						
						
						
						var myFarm1:Farm = new Farm();
						
						myFarm1.ID = event.result.farms.farm[i].ID;
						myFarm1.crop = event.result.farms.farm[i].crop;
						myFarm1.cycle = event.result.farms.farm[i].cycle;					
						myFarm1.state = event.result.farms.farm[i].state;
						myFarm1.x = event.result.farms.farm[i].x;
						myFarm1.y = event.result.farms.farm[i].y;										
						farms.push(myFarm1);
						
				
					
					}
				
				}
				
				
				var j:int;
				for(j=0;j<farms.length;j++)
				{						


					var p:Point = new Point(farms[j].x,farms[j].y);
					restoreFarm(p,farms[j].crop);					

				}
				
				
				
			}						
			protected function returnLoan_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if( this.perviousLoan == false )
				{
					this.perviousLoan = true;
					this.score = this.score - 50;	
					
					this.coins = this.coins + 10;
					
					
					var httpService5:HTTPService = new HTTPService();					
					httpService5.url = "http://localhost:8080/WebApplication3/Score?action=updateLoanInfo&ID="+username+"&isDebtor=no";
					httpService5.send(null);					
				}
				else
					Alert.show("No previous loan due");					
				
			}
			
			
			protected function button7_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				
				if(this.score - this.BuyCorn >= 0)
				{
					this.score = this.score - this.BuyCorn;
					totalCron += 10;
					
					
					var httpService1:HTTPService = new HTTPService();
					httpService1.url = "http://localhost:8080/WebApplication3/market?action=addTransaction&username="+username+"&transaction_type=0&item_type=corn&amount="+this.BuyCorn+"";
					httpService1.send(null);
					
					//http://localhost:8080/WebApplication3/market?action=addTransaction&username=ali&transaction_type=0&item_type=wheat&amount=32
				}
				else
				{
					Alert.show("you didn't have enough coins to buy corn");
				}
				
			}
			
			
			
			
			
			
			
			protected function restoreFarm(tPt:Point,seed:String):void
			{
				
				if(landInPossession[currIndex].addFarmDivision(tPt)){
					var land:Land = landInPossession[currIndex];			
					var farmDiv:Array = landInPossession[currIndex].getLandDivisions();	
					//var tPt:Point = playerMovement.getCurrCor();
					
					
					farmDiv.push(new LandDivision(tPt, 0, "Wheat", "Ordinary"));
					
					landInPossession[currIndex].setLandDivisions(farmDiv);
					
					var div:Number = landInPossession[currIndex].getNumLandDivision();
					
					var coor:Array = farmDiv[farmDiv.length-1].getCoordinates(); 
					
					if(div == 1){
						currBgImage1.visible = true;
						currBgImage1.x = tPt.x + 14;
						currBgImage1.y = tPt.y - 115;
						currBgImage1.source="crop1.png";
						
						star0.x = coor [0].x;
						star0.y = coor [0].y;
						star0.visible=true;
						
						star1.x = coor [1].x;
						star1.y = coor [1].y;
						star1.visible=true;
						
						star2.x = coor [2].x;
						star2.y = coor [2].y;
						star2.visible=true;
						
						star3.x = coor [3].x;
						star3.y = coor [3].y;
						star3.visible=true;
						
						star4.x = coor [4].x;
						star4.y = coor [4].y;
						star4.visible=true;
						
						star5.x = coor [5].x;
						star5.y = coor [5].y;
						star5.visible=true;
						
						star6.x = coor [6].x;
						star6.y = coor [6].y;
						star6.visible=true;
						
						star7.x = coor [7].x;
						star7.y = coor [7].y;
						star7.visible=true;
						
						star8.x = coor [8].x;
						star8.y = coor [8].y;
						star8.visible=true;
					}
					else if(div == 2){
						currBgImage2.visible = true;
						currBgImage2.x = tPt.x + 14;
						currBgImage2.y = tPt.y - 115;
						currBgImage2.source="crop1.png";
						
						star9.x = coor [0].x;
						star9.y = coor [0].y;
						star9.visible=true;
						
						star10.x = coor [1].x;
						star10.y = coor [1].y;
						star10.visible=true;
						
						star11.x = coor [2].x;
						star11.y = coor [2].y;
						star11.visible=true;
						
						star12.x = coor [3].x;
						star12.y = coor [3].y;
						star12.visible=true;
						
						star13.x = coor [4].x;
						star13.y = coor [4].y;
						star13.visible=true;
						
						star14.x = coor [5].x;
						star14.y = coor [5].y;
						star14.visible=true;
						
						star15.x = coor [6].x;
						star15.y = coor [6].y;
						star15.visible=true;
						
						star16.x = coor [7].x;
						star16.y = coor [7].y;
						star16.visible=true;
						
						star17.x = coor [8].x;
						star17.y = coor [8].y;
						star17.visible=true;
					}
					else{
						currBgImage3.visible = true;
						currBgImage3.x = tPt.x + 14;
						currBgImage3.y = tPt.y - 115;
						currBgImage3.source="crop1.png";
						
						star18.x = coor [0].x;
						star18.y = coor [0].y;
						star18.visible=true;
						
						star19.x = coor [1].x;
						star19.y = coor [1].y;
						star19.visible=true;
						
						star20.x = coor [2].x;
						star20.y = coor [2].y;
						star20.visible=true;
						
						star21.x = coor [3].x;
						star21.y = coor [3].y;
						star21.visible=true;
						
						star22.x = coor [4].x;
						star22.y = coor [4].y;
						star22.visible=true;
						
						star23.x = coor [5].x;
						star23.y = coor [5].y;
						star23.visible=true;
						
						star24.x = coor [6].x;
						star24.y = coor [6].y;
						star24.visible=true;
						
						star25.x = coor [7].x;
						star25.y = coor [7].y;
						star25.visible=true;
						
						star26.x = coor [8].x;
						star26.y = coor [8].y;
						star26.visible=true;
					}
				}
				else{
					Alert.show("Can't cultivate here");
				}
				
			}
			
			
			protected function button8_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				
				if(totalCron - 10 >= 0)
				{
					
					totalCron -= 10;
					this.score += this.SellCorn;
					
					var httpService1:HTTPService = new HTTPService();
					httpService1.url = "http://localhost:8080/WebApplication3/market?action=addTransaction&username="+username+"&transaction_type=1&item_type=corn&amount="+this.SellCorn+"";
					httpService1.send(null);
					
					
				}
				else
				{
					Alert.show("you didn't have enough corn to sell");				
				}
				
			}
			
			protected function button9_clickHandler(event:MouseEvent):void
			{
				if(this.score - this.BuyWheat >= 0)
				{
					this.score = this.score - this.BuyWheat;
					totalWheat += 10;
					
					var httpService1:HTTPService = new HTTPService();
					httpService1.url = "http://localhost:8080/WebApplication3/market?action=addTransaction&username="+username+"&transaction_type=0&item_type=wheat&amount="+this.BuyWheat+"";
					httpService1.send(null);
					
					
				}
				else
				{
					Alert.show("you didn't have enough coins to buy corn");
				}
			}
			
			protected function button10_clickHandler(event:MouseEvent):void
			{
				
				if(totalWheat - 10 >= 0)
				{
					
					totalWheat -= 10;
					this.score += this.SellWheat;
					
					var httpService1:HTTPService = new HTTPService();
					httpService1.url = "http://localhost:8080/WebApplication3/market?action=addTransaction&username="+username+"&transaction_type=1&item_type=wheat&amount="+this.SellWheat+"";
					httpService1.send(null);
					
					
				}
				else
				{
					Alert.show("you didn't have enough corn to sell");				
				}			
				
			}			
			protected function food1_clickHandler(type:String):void
			{
				if( type == "food1")
				{
					progress += 5;
					if( progress > 100)
						progress -= 5;
					
					progressBar.setProgress(progress, progressBar.maximum);		
				}
				else if( type == "food2")
				{

					progress += 10;					
					if( progress > 100)
						progress -= 10;
					
					progressBar.setProgress(progress, progressBar.maximum);		
				}
					
			}
			
			protected function charity_mouseOverHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
	//			charity.opaqueBackground = 0xC0C0C0;
			
//				charity.styleName.flash_proxy.
			}
			
			protected function charity_mouseOutHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
//				charity.opaqueBackground = 0xFFFFFF;
				
			}
			
			protected function button11_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
			


				var Login:HTTPService = new HTTPService();
				Login.url = "http://localhost:8080/WebApplication3/user?action=login&username="+ Username.text +"&password="+ Password.text +"";
				Login.addEventListener(ResultEvent.RESULT,loginAction);
				Login.send(null);
				

				
			}
			
			protected function viewstack1_creationCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				viewstack1.selectedChild = login;
				globalCheck = true;
				
				
			}
			
			protected function button12_clickHandler(event:MouseEvent):void
			{
				
				
							
				
				
				
				
				viewstack1.selectedChild = login;
				globalCheck = true;
				
				landInPossession.pop();
				landInPossession.pop();
				landInPossession = null;
				
				farms = null;
				
				
				var pageURL:String = ExternalInterface.call('window.location.C:\Users\Haider\Downloads\New folder (2)\projects\myFirstFlexProject\bin-debug\renderCanvas.html');
				navigateToURL(new URLRequest(pageURL));				
				
				
			}
			
			protected function button13_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				
				Username.text = "";
				Password.text = "";
				viewstack1.selectedChild = login;
				
				
				
				
			}
			
			protected function button14_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				

				if(SUsername.text == null  ||  SPassword.text == null || SEmail.text == null )
				{
					Alert.show("Fill All fields");
					return;
					
				}
				else
				{

					
					var signUp:HTTPService = new HTTPService();
					
					signUp.url = "http://localhost:8080/WebApplication3/user?action=signUp&username="+SUsername.text+ "&password="+SPassword.text+"&email="+SEmail.text+"";
					signUp.addEventListener(ResultEvent.RESULT,signUpResult);
					
					signUp.send();
					
					
				}
					
					
			}
			
			protected function button15_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				
				viewstack1.selectedChild = signUp;
			}
			
		]]>
	</fx:Script>


	<mx:ViewStack 
		id="viewstack1" 
		x="0" y="3" 
		width="1361" height="592"
		creationComplete="viewstack1_creationCompleteHandler(event)"
		>
		
		<mx:Canvas id="game">
			
			<s:Image id="farm" width="921" height="400" source="farm1.png"/>
			<s:Image id="block" x="-154" y="-95" width="929" height="400" source="block1.png"/>
			
			<s:Image id="currBgImage1" width="400" height="300" visible="false" />
			<s:Image id="currBgImage2" width="400" height="300" visible="false" />
			<s:Image id="currBgImage3" width="365" height="127" visible="false" />
			
			<s:Image id="star0" width="50" height="50" visible="false" source="star.png"/>
			<s:Image id="star1" width="50" height="50" visible="false" source="star.png"/>
			<s:Image id="star2" width="50" height="50" visible="false" source="star.png"/>
			<s:Image id="star3" width="50" height="50" visible="false" source="star.png"/>
			<s:Image id="star4" width="50" height="50" visible="false" source="star.png"/>
			<s:Image id="star5" width="50" height="50" visible="false" source="star.png"/>
			<s:Image id="star6" width="50" height="50" visible="false" source="star.png"/>
			<s:Image id="star7" width="50" height="50" visible="false" source="star.png"/>
			<s:Image id="star8" width="50" height="50" visible="false" source="star.png"/>
			
			<s:Image id="star9" width="50" height="50" visible="false" source="star.png"/>
			<s:Image id="star10" width="50" height="50" visible="false" source="star.png"/>
			<s:Image id="star11" width="50" height="50" visible="false" source="star.png"/>
			<s:Image id="star12" width="50" height="50" visible="false" source="star.png"/>
			<s:Image id="star13" width="50" height="50" visible="false" source="star.png"/>
			<s:Image id="star14" width="50" height="50" visible="false" source="star.png"/>
			<s:Image id="star15" width="50" height="50" visible="false" source="star.png"/>
			<s:Image id="star16" width="50" height="50" visible="false" source="star.png"/>
			<s:Image id="star17" width="50" height="50" visible="false" source="star.png"/>
			
			<s:Image id="star18" width="50" height="50" visible="false" source="star.png"/>
			<s:Image id="star19" width="50" height="50" visible="false" source="star.png"/>
			<s:Image id="star20" width="50" height="50" visible="false" source="star.png"/>
			<s:Image id="star21" width="50" height="50" visible="false" source="star.png"/>
			<s:Image id="star22" width="50" height="50" visible="false" source="star.png"/>
			<s:Image id="star23" width="50" height="50" visible="false" source="star.png"/>
			<s:Image id="star24" width="50" height="50" visible="false" source="star.png"/>
			<s:Image id="star25" width="50" height="50" visible="false" source="star.png"/>
			<s:Image id="star26" width="50" height="50" visible="false" source="star.png"/>
			
			
			
			<s:Button x="921" y="2" width="117" height="65"
					  icon="@Embed(source='assets/shovel1.png')"	
					  click="myViewStack.selectedChild=search;"
					  />
			
			
			
			<s:Button x="921" y="67" width="117" height="65" label="Food"
					  icon="@Embed(source='assets/food2.png')"	
					  click="myViewStack.selectedChild=food;"/>	
			
			<s:Button 
				id="charity"
				x="921" y="132" width="117" height="65"
				icon="@Embed(source='assets/transaction1.png')"	
				click="myViewStack.selectedChild=custInfo;"
				mouseOver="charity_mouseOverHandler(event)"
				mouseOut="charity_mouseOutHandler(event)"
				/>
			
			<s:TextInput x="921" y="398" width="117" height="30" text="{this.message}"/>
			
			
			<mx:ViewStack id="myViewStack" x="0" y="403" width="913" height="175">
				
				<mx:VBox showEffect="{wipeRight}" hideEffect="{wipeLeft}" id="search" label="Search">
					
					<mx:Canvas width="312" height="117">
						
						<s:Button id="seed1" x="2" y="1" width="128" height="100" label="wheat"
								  icon="@Embed(source='assets/wheat.png')"			
								  mouseOver="noticeBoard('Wheat\n\n Buy:  50 coins \n\n Sell:  500 coins')"
								  click="button2_clickHandler(event,'wheat')"
								  
								  />
						
						<s:Button id="seed2" x="132" y="1" width="128" height="100" label="corn"
								  icon="@Embed(source='assets/corn.png')"			
								  mouseOver="noticeBoard('Wheat\n\n Buy:  100 coins \n\n Sell:  700 coins')"					  
								  click="button2_clickHandler(event,'corn')"
								  />
						
					</mx:Canvas>
					
				</mx:VBox>	
				
				<mx:VBox showEffect="{wipeRight}" hideEffect="{wipeLeft}" id="custInfo" label="Customer Info">
					<mx:Canvas width="571">
						<s:Button id="giveChairty" x="1" y="1" width="128" height="100" label="give Chairty"
								  mouseOver="noticeBoard('Charity \n\n charity and well being of people will increase your score')"
								  click="giveChairty_clickHandler(event)"
								  />
						
						<s:Button id="takeLoan" x="131" y="1" width="128" height="100" label="take loan"
								  click="takeLoan_clickHandler(event)"
								  mouseOver="noticeBoard('Loan \n\n you can take loan from Bait ul Mall')"
								  
								  />			
						<s:Button id="returnLoan" x="261" y="1" width="128" height="100" label="return loan"
								  click="returnLoan_clickHandler(event)"
								  mouseOver="noticeBoard('Loan \n\n returning loan is considered as good obligaion and increase your score')"					  
								  />
						
						<mx:Label
							id="notification"
							x="15" y ="90"
							text = ""
							/>
						
						
					</mx:Canvas>
					
				</mx:VBox>
				
				<mx:VBox showEffect="{wipeRight}" hideEffect="{wipeLeft}" id="food" label="Food">
					
					<mx:Canvas width="509" height="111">
						
						<s:Button id="food1"
								  x="1" y="1"
								  width="128" height="100" 
								  icon="@Embed(source='assets/fruits.png')"
								  mouseOver="noticeBoard('Fruits\n\n Buy:  100 coins \n\n Engery:  5')"						  
								  click="food1_clickHandler('food1')"
								  />
						
						<s:Button id="food2" 
								  x="131" y="1" 
								  width="128" height="100" 
								  icon="@Embed(source='assets/fish.png')"
								  mouseOver="noticeBoard('Fish\n\n Buy:  150 coins \n\n Energy:  10')"						  
								  click="food1_clickHandler('food2')"
								  
								  />			
						
						
					</mx:Canvas>
					
					
				</mx:VBox>
				
				
				
				
				<mx:VBox showEffect="{wipeRight}" hideEffect="{wipeLeft}" id="market" label="Market">
					
					<mx:Canvas >
						
						
						<s:Group width="329" height="175">
							<s:Image x="15" y="25" 
									 width="80" height="49" 
									 mouseOver="noticeBoard('Corn\n\n Buy corn to eat from the market ')"
									 source="assets/corn.png"/>
							<s:Button 
								x="118" y="24" 
								width="70" height="50" 
								label="{BuyCorn}"
								mouseOver="noticeBoard('Buy Corn\n\n Buy corn at the market rate ' + BuyCorn +' coins per 10 kg')"	
								click="button7_clickHandler(event)"
								/> 
							<s:Button 
								x="204" y="24"
								width="70" height="50" 
								label="{SellCorn}"
								mouseOver="noticeBoard('Sell Corn\n\n Sell corn at the market rate ' + SellCorn +' coins per 10 kg')"
								click="button8_clickHandler(event)"
								/>
							
							
							<s:Image x="5" y="69" width="100" height="60" source="assets/wheat.png"/>
							
							<s:Button 
								x="118" y="77" 
								width="70" height="50" 
								label="{BuyWheat}"
								mouseOver="noticeBoard('Buy Wheat\n\n Buy wheat at the market rate ' + BuyWheat +' coins per 10 kg')"	
								click="button9_clickHandler(event)"
								/>
							<s:Button 
								x="204" y="77" 
								width="70" height="50" 
								label="{SellWheat}"
								mouseOver="noticeBoard('Sell Wheat\n\n sell wheat at the market rate ' + SellWheat +' coins per 10 kg')"				
								click="button10_clickHandler(event)"
								/>
							
							<s:Label x="122" y="1" fontSize="16" text="Buy"/>
							<s:Label x="208" y="2" fontSize="16" text="Sell"/>
						</s:Group>			
						
						
					</mx:Canvas>
					
					
				</mx:VBox>
				
				<mx:VBox showEffect="{wipeRight}" hideEffect="{wipeLeft}" id="playerSleepTime" label="Sleep Time">
					
					<mx:Canvas width="911" height="117">
						
						<s:Image  x="450" y="76" width="52" height="40" id="left1"
								  source="assets/left0.png" visible="false"
								  />
						<s:Image  x="400" y="76" width="52" height="40" id="left2"
								  source="assets/left1.png" visible="false"
								  />
						<s:Image  x="350" y="76" width="52" height="40" id="left3"
								  source="assets/left2.png" visible="false"
								  />
						<s:Image  x="300" y="76" width="52" height="40" id="left4"
								  source="assets/left0.png" visible="false"
								  />
						<s:Image  x="250" y="76" width="52" height="40" id="left5"
								  source="assets/left1.png" visible="false"
								  />
						<s:Image  x="200" y="76" width="52" height="40" id="left6"
								  source="assets/left2.png" visible="false"
								  />
						<s:Image  x="150" y="76" width="52" height="40" id="left7"
								  source="assets/left0.png" visible="false"
								  />
						<s:Image  x="100" y="76" width="52" height="40" id="left8"
								  source="assets/left1.png" visible="false"
								  />
						<s:Image id="home" width="100" height="116" visible="true" source="house.png" x="0" y="1"/>
					</mx:Canvas>
					
				</mx:VBox>	
				
				
			</mx:ViewStack>
			
			<s:Image x="-26" y="3" width="182" height="84" source="assets/board_bg.png"/>
			
			<mx:ProgressBar 
				id="progressBar" 
				x="56" y="42" 
				width="74" height="30" 
				maximum="100" minimum="0"
				mode="manual"/>
			<s:TextInput x="56" y="8" width="46" text="{this.score}"/>
			
			<s:Label x="164" y="13" text="Score&#xd;" color="White"/>
			<s:TextInput x="206" y="8" text="{this.coins}"/>
			<s:Image x="1082" y="0" width="229" height="335" source="assets/UI_News_open.png"/>
			<s:Label left="1107" right="703" top="65" bottom="1744" horizontalCenter="202"
					 text="{this.board}"
					 
					 verticalCenter="-840"/>
			<s:Button x="921" y="262" width="117" height="65"/>
			
			<s:Image id="soundButton" x="921" y="263" width="117" height="65" click="soundHandler()" source="sound.png" />
			
			<s:Button 
				x="921" y="197" 
				width="117" height="65" 
				icon="@Embed(source='assets/market2.png')"
				click="myViewStack.selectedChild=market;"
				/>
			
			
			
			
			<s:Label x="353" y="13" color="#FAF5F5" fontSize="12" text="Corn"/>
			<s:TextInput x="393" y="8" text="{this.totalCron}"/>
			<s:Label x="530" y="13" height="14" color="#F9F3F3" fontSize="12" text="wheat"/>
			<s:TextInput x="577" y="10" text="{this.totalWheat}"/>					
			<s:Button x="921" y="326" width="117" height="72" label="Sign Out"
					  click="button12_clickHandler(event)"/>
			<s:Label 
				x="1129" y="68" 
				width="153" height="199" 
				
				text="{this.board}"/>
		</mx:Canvas>
		
		<mx:Canvas id="login">
			<s:Panel x="1072" y="40" width="267" height="542" textAlign="center" title="Login">
				<s:Form x="10" y="23" width="241" height="112">
					<s:FormItem label="username">
						<s:TextInput
							id= "Username"
							/>
					</s:FormItem>
					<s:FormItem label="password">
						<s:TextInput
							id="Password"
							displayAsPassword="true"


							/>
					</s:FormItem>
				</s:Form>
				<s:Button x="81" y="143" label="login" 
						  click="button11_clickHandler(event)"
											  />
				<s:Button x="81" y="172" label="new" click="button15_clickHandler(event)"/>
			</s:Panel>
			
			
		</mx:Canvas>
		<mx:Canvas id="signUp">
			<s:Panel x="1072" y="40" width="267" height="542" title="Sign Up">
				<s:Form x="10" y="27" width="228" height="164">
					<s:FormItem label="username">
						<s:TextInput
							id="SUsername"
							/>
					</s:FormItem>
					<s:FormItem label="password">
						<s:TextInput
							id="SPassword"
							displayAsPassword="true"
							
							/>
					</s:FormItem>
					<s:FormItem label="email">
						<s:TextInput
							id="SEmail"
							
							/>
					</s:FormItem>
				</s:Form>
				<s:Label x="21" y="10" text="all fields are requied"/>
				<s:Button x="89" y="199" label="Sign Up" click="button14_clickHandler(event)"/>
				<s:Button x="89" y="228" label="login" click="button13_clickHandler(event)"/>
			</s:Panel>
			</mx:Canvas>
		
	</mx:ViewStack>
	


	
	

</s:Application>
